"use strict";Vue.component("folders-item",{props:["folder","selectedFolder"],template:'\n  <li class="m-folders-list__item"\n      v-bind:class="{\'is-active\': isActive}">\n    <a class="m-folders-list__link"\n      v-bind:href="\'#/folders/\' + folder.name"\n      v-on:click="selectFolder">\n      {{ folder.name }}\n    </a>\n  </li>',computed:{isActive:function(){return this.folder.name===this.selectedFolder}},methods:{selectFolder:function(e){var t={foldersListItem:"m-folders-list__item",isActive:"is-active"};document.querySelectorAll(".".concat(t.foldersListItem)).forEach(function(e){e.classList.remove(t.isActive)}),e.target.parentNode.classList.add(t.isActive),this.$emit("folder-change",e.target.innerText)}}}),Vue.component("tags-item",{props:["tag"],template:'\n  <li class="m-folders-list__item">\n    <a class="m-folders-list__link" v-bind:href="\'#/tags/\' + tag.handle">{{ tag.handle }}</a>\n  </li>'}),Vue.component("notes-item",{props:["note","selectedNote"],template:'\n  <li class="m-notes-list__item">\n    <div class="m-note"\n        v-bind:slug="note.slug"\n        v-bind:class="{\'is-active\': isActive}"\n        v-on:click="selectNote">\n      <p class="m-note__title">{{ note.title }}</p>\n      <p class="m-note__updated">{{ note.updated_at }}</p>\n    </div>\n  </li>',computed:{isActive:function(){return this.note.slug===this.selectedNote}},methods:{selectNote:function(e){var t={note:"m-note",isActive:"is-active"},s=e.currentTarget;document.querySelectorAll(".".concat(t.note)).forEach(function(e){e.classList.remove(t.isActive)}),s.classList.add(t.isActive);var i=s.getAttribute("slug");window.location.hash="#/".concat(i),this.$emit("note-change",i)}}}),Vue.component("note-detail",{props:["note"],template:'\n  <div class="m-note-detail" v-if="note">\n      <h1>{{ note.title }}</h1>\n      <span v-for="tag in note.tags"\n            v-bind:tag="tag"\n            v-bind:key="tag.id">\n          {{ tag.handle }}\n      </span>\n      <hr>\n      <div v-html="note.content"></div>\n  </div>',updated:function(){document.querySelectorAll(".m-note-detail pre code").forEach(function(e){hljs.highlightBlock(e)})}});var notesApp=new Vue({el:"#notes-app",data:{foldersList:[],tagsList:[],notesList:[],noteDetail:!1,selectedFolder:!1,selectedNote:!1},computed:{notEmptyFoldersList:function(){return Boolean(this.foldersList.length)},notEmptyTagsList:function(){return Boolean(this.tagsList.length)}},methods:{refreshFolders:function(e){var t=this;this.$http.get("/folders").then(function(e){t.foldersList=e.data})},refreshTags:function(e){var t=this;this.$http.get("/tags").then(function(e){t.tagsList=e.data})},refreshNotes:function(e){var t=this;e=encodeURIComponent(e),this.$http.get("/folders/".concat(e)).then(function(e){t.notesList=e.data})},folderChangeHandler:function(e){this.selectedFolder=e,this.selectedNote=!1,this.noteDetail=!1,this.refreshNotes(e)},noteChangeHandler:function(e){var t=this;this.$http.get("/notes/".concat(e)).then(function(e){t.noteDetail=e.data})},slideToMobileFocusArea:function(e){var t=document.querySelector(".l-wrapper");switch(e){case"folders-list":t.classList.add("folders-visible"),t.classList.remove("notes-list-visible"),t.classList.remove("note-detail-visible");break;case"notes-list":t.classList.remove("folders-visible"),t.classList.add("notes-list-visible"),t.classList.remove("note-detail-visible");break;case"note-detail":t.classList.remove("folders-visible"),t.classList.remove("notes-list-visible"),t.classList.add("note-detail-visible")}},init:function(){var e=this;if(this.refreshFolders(),this.refreshTags(),!window.location.hash)return void this.$http.get("/folders").then(function(t){if(e.foldersList=t.data,e.foldersList.length){var s=e.foldersList[0].name;e.selectedFolder=s,e.$http.get("/folders/".concat(s)).then(function(t){if(e.notesList=t.data,e.notesList.length){var s=e.notesList[0].slug;e.selectedNote=s,e.noteChangeHandler(s)}e.slideToMobileFocusArea("folders-list")})}});var t=/^#\/folders\/([^\/]+)\/?$/,s=window.location.hash.match(t);if(s){var i=s[1];return this.folderChangeHandler(i),void this.slideToMobileFocusArea("notes-list")}var n=/^#\/([^\/]+)\/?$/,o=window.location.hash.match(n);if(o){var l=o[1];this.$http.get("/notes/".concat(l)).then(function(t){e.noteDetail=t.data,e.selectedNote=e.noteDetail.slug;var s=e.noteDetail.folder.name;e.selectedFolder=s,e.$http.get("/folders/".concat(s)).then(function(t){e.notesList=t.data,e.slideToMobileFocusArea("note-detail")})})}}},beforeMount:function(){this.init()}});window.onhashchange=function(e){notesApp.init()};